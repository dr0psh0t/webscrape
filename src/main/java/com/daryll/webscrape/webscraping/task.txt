==task1==
1.  Summary
    The main library being used by the project is JSoup so it would be necessary to have
    a good understanding on how it works. Scraping is the main process of the project as
    well so having a good understanding on how it works would be helpful.

2.  Done Definition
    Understood how the JSoup Library works

    Basic understanding of Scraping
=========
==task2==
1.  Summary

    Although a solution already exist, not introducing that solution would increase the
    chances of a better solution will be presented.

2.  Problem

    Our service main idea is to contact companies through their “Contact Us Form”. So a
    certain client of ours would like to contact company A, B and D. With that you will
    have the following information:

    Client Information such as:
        Company Name
        Subject
        Message
        Address
        Contact number
        firstname
        lastname
        email

    List of target company information:
        company name
        company website

3.  Probable problems that needs to be address by your solution

    A website may contain multiple forms, we are interested in forms that indicate that its for
    the “Others” form. Example, Registration Form, Contact the CEO, Other Stuff.
    Most likely we want the Other Stuff.

    A single page may contain multiple form, example: Search form, and Contact Form. We want the Contact Form.

    Matching the client data to the appropriate field. Example Message data should be written
    in the “message form field”

4.  Done Definition

    You are not expected to create a working code. Create a diagram, combine it with pseudo code.
    Do what you can to present your idea. Give enough information that we can discuss the overall
    plan on how to solve the problem above.

=========
companies with their contact form fields:

aboitiz:        [email, phone, message, subject]
baihotel:       [email,      , message, subject]
fullspeed:      [email, phone, message,        ]
wellmade:       [email,      , message,        ]
bluewater:      [email, phone, message,        ]
waterfront:     [email, phone, message,        ]
hmtower:        [email, phone,        ,        ]
tesla:          [email, phone, message,        ]
crownregency    [email, phone, message, subject]
jpark:          [email,      , message, subject]
=====

initialize a client instance
initialize a set of companies

void main():
    foreach company in companies, return a set of Documents:
        try:
            scrape company website
            get element which contains text "contact us"

            if element is found:
                scrape href link and return Document
            else:
                get element which contains text "contact"

                if element is found:
                    scrape href link and return Document
                else:
                    look for contact form in homepage

                    if contact form is found:
                        scrape the form and return Document
                    else:
                        foreach mapping in ["contact-us","contact","Contact-Us","Contact","CONTACT-US", "CONTACT"]:
                            scrape company website by concatting home+mapping
                            if 404 status is not thrown:
                                scrape the form and return Document
                        return Dummy Document
        catch:
            return Dummy Document


Document scrapeLink(href, site, client):
    if href is valid url:
        scrape href and return Document
    else:
        scrape site+href and return Document


Document determineContactForm(document, client):
    get textarea element from form

    if text is found:
        get the parent of textarea which is form
        scrape the form and return document
    else:
        foreach form from  forms in the page:
            get all labels
            if any label contains a text "email":
                scrape the form and return document
            else:
                get all input elements which has a type=text attribute

                for each input from input elements:
                     look for an attribute name, id, placeholder with a value of "email"

                     if any name,id,placeholder attributes contains "email"
                        scrape form and return document

        return Dummy Document


Document scrapeForm(form, client):
    get all input elements
    get all label elements

    if labels is not empty:
        for each input elements:
            if input is a user input:
                get parent of input
                traverse to parent until label is found
                fill inputs with client information
    else:
        for each input elements:
            if input is a user input:
                fill inputs with client information

    get textarea element
    if textarea is found:
        set textarea text with client message

    return Document





























